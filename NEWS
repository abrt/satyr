0.43
==========
Fix test failure when using clang (Thanks to Alex)

0.42
==========
Find crash thread before stacktrace is normalized

0.41
==========
Normalize both gdb stacktrace and the crash frame (rhbz#2168223)

0.40
==========
Add support for fine-grained error location lines in Python tracebacks

0.39
==========
Use g_malloc() and g_free() instead of malloc()/free() in many instances
Fix call to a deprecated in Python tests
Add test case for sr_rpm_package_cmp()

0.38
==========
lib: Use GLib for computing SHA-1 digests

0.37
==========
Add sr_distances_cluster_objects argument validation
Fix var initialization warning in GCC 11

0.36
==========
spec: Use autoreconf in %build

0.35
==========
Fix leaks in kernel oops stacktrace and report handling code
Fix unit test portability issue
Add build dependency on make

0.34
==========
Fix leaks in kernel oops stacktrace and report handling code
Fix unit test portability issue

0.33
==========
Fix leaks in kernel oops stacktrace and report handling code
Fix unit test portability issue

0.32
==========
Fix leaks in kernel oops stacktrace and report handling code

satyr 0.31
==========
Remove #define PyString_AsString PyUnicode_AsUTF8
python: Adapt to changes made in PEP 590

satyr 0.30
==========
Fix registers being parsed as modules in kernel oopses in some cases
Use Nettle for cryptographic calculations
Fix builds with GCC 10

satyr 0.28
==========
Clean up build files, remove ability to build without an unwinder
Remove Python 2 support
Remove more non-crash function frames
Fix JSON parser crash with invalid input

satyr 0.27
==========
Improved format of truncated backtrace for Python and core problems.
Anonymize paths in frames.

satyr 0.26
==========
Updated list of functions for normalization. Python3 build for RHEL8 was allowed.
Allow build without Python2.

satyr 0.25
==========
Updated list of functions for normalization. Python3 build for RHEL8 was allowed.
Added missing stubs for functions that were replaced. Some tweaks were added
for compilation.

satyr 0.24
==========
Allowed reporting of unpackaged problems, this is usefull for custom problem
collection using custom installation of FAF. Added doxygen HTML documentation
generation. Tests and bugfixies.

satyr 0.23
==========
Allow rpm to be optional at build time.

satyr 0.22
==========
Added JavaScript stack trace parser and uReport generator (V8 stack trace is
the only recognized JavaScript stack trace format). Refactored the in-hook
core backtrace unwinder to avoid the need to run elfutils functions under root
user. Started limiting the number of unwound frames in GDB core unwinder to
show only the frames that caused infinite recursion.

satyr 0.21
==========
Introduce 'serial' field in uReport and actualize list of normalized functions.

satyr 0.20
==========
Don't parse SO files as source_files. Added support for OS Variant. Fixed the
missing frame build_id and file_name. Tests and bugfixes.

satyr 0.19
==========
Enhancements to GDB parser: Thread ID, C++ template arguments. Tests and
bugfixes.

satyr 0.18
==========
Removed function fingerprinting code. New taint flags added. Normalization
tweaks. Added function to create core stacktraces from core hook in more secure
manner.

satyr 0.17
==========
Added python3 bindings. Added paralellizable distance matrix computation.
Hopefully really fixed unwinding VDSO frames on i386. Other bugfixes.

satyr 0.16
==========
Added support for unwinding stack of dying process from core dump hook. Added
support for Ruby uReports. Various bugfixes.

satyr 0.15
==========
Fixed issues found in a security audit. Fixed the compat version of duphash
generation which were not refusing to produce duphash for completely unreliable
oopses. Fixed parsing of invalid syntax Python exceptions which were not
recognized and caused satyr to refuse such a Python exception. Fixed unwinding
of VDSO frames on i386. Limit the number of frames unwound to deal with
infinite recursion.  Support authentication data, use dummy values for some
missing members and include DESKTOP_SESSION in uReport. Ignore suppressed Java
exceptions causing satyr to fail to parse such an Java exceptions. Quality
frame has to have file name because almost all frames has function name because
of MiniDebuginfo.

satyr 0.14
==========
Ported to current elfutils unwinder API. Disabled frame fingerprinting.
Rudimentary ruby bindings added. Bugfixes.

satyr 0.13
==========
Kerneloops parser extended to ppc64 and s390 koopses. ABRT-compatible
implementation of kerneloops hashing.

satyr 0.12
==========
JVM frames normalization. C++ symbol demangling. Configure option to build
python module with statically linked libsatyr. Improvements to openSUSE
compatibility. Several bugfixes including malformed Java uReports.

satyr 0.11
==========
Make all python objects hashable and extend the list of normalized functions.
Several bugfixes.

satyr 0.10
==========
Add support for multiple koops stacks. Several bugfixes.

satyr 0.9
=========
Enrich koops uReport data with koops text and kernel version. Improve koops
modules handling.

satyr 0.8
=========
Added support for json de/serialization of reports and stacktraces.

satyr 0.7
=========
Fix segmentation fault related to crash thread detection.

satyr 0.6
=========
Do not export internal function symbols.

satyr 0.5
=========
Added function that creates core stacktrace from GDB output. Several bugfixes.

satyr 0.4
=========
Added missing features needed by ABRT. Support for uReport2. Major changes in
both C and Python API.

satyr 0.3
=========
Bug fixes, build fixes for older systems.

satyr 0.2
=========
Documentation cleanup, build fixes.

satyr 0.1
=========
Initial release based on btparser 0.18.
