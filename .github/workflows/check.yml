name: Build
on:
  pull_request:
    branches: [master]
  push:
    branches: [master]
jobs:
  build:
    name: Build
    container:
      image: fedora:latest
      # All for gcore in core_stacktrace tests.
      options: "--cap-add=SYS_PTRACE --security-opt=apparmor:unconfined --security-opt=seccomp=unconfined"
    runs-on: ubuntu-latest
    steps:
      - name: Check out sources
        uses: actions/checkout@v2

      - name: Install build environment
        run: |
          dnf --assumeyes install dnf-plugins-core
          dnf --assumeyes copr enable @abrt/devel
          dnf --assumeyes install \
            @c-development @development-tools @rpm-development-tools \
            intltool

      - name: Install build dependencies
        run: ./autogen.sh sysdeps --install

      - name: Configure build
        run: ./autogen.sh

      - name: Build
        run: make --load-average=2

      - name: Run tests
        run: make check

      - name: Upload test log
        uses: actions/upload-artifact@v2
        with:
          name: testsuite.log
          path: tests/testsuite.log
        if: ${{ failure() }}

  coverage:
    name: Coverage
    container:
      image: fedora:latest
      # All for gcore in core_stacktrace tests.
      options: "--cap-add=SYS_PTRACE --security-opt=apparmor:unconfined --security-opt=seccomp=unconfined"
    runs-on: ubuntu-latest
    steps:
      - name: Check out sources
        uses: actions/checkout@v2

      - name: Install build environment
        run: |
          dnf --assumeyes install dnf-plugins-core
          dnf --assumeyes copr enable @abrt/devel
          dnf --assumeyes install \
            @c-development @development-tools @rpm-development-tools \
            intltool python3-codecov

      - name: Install build dependencies
        run: ./autogen.sh sysdeps --install

      - name: Configure build
        run: ./autogen.sh

      - name: Build
        run: make --load-average=2 CFLAGS+='--coverage -O0'

      - name: Run tests
        run: make check

      - name: Analyse code coverage
        run: cd lib && gcov -pbufc -o .libs *.lo

      - name: Upload coverage report
        run: codecov -X gcov pycov --gcov-glob 'python/*' 'tests/*'
